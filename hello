#  Merge sorted array == m and n, list1, list2 --
=== save in nums1 list and return None

class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        i = m - 1
        j = n - 1
        k = m + n - 1
        while i >= 0 and j >= 0:
            if nums1[i] > nums2[j]:
                nums1[k] = nums1[i]
                i -= 1
            else:
                nums1[k] = nums2[j]
                j -= 1  
            k -= 1
        
        while j >= 0:
            nums1[k] = nums2[j]
            j -= 1  
            k -= 1





======
# Merege 2 array sorted ==
nums1,nums2,n,m ===taken in merged

def function(nums1,nums2,n,m):
    merged = []
    i = 0 
    j = 0
    while i < m and j < n:
        if nums1[i] < nums2[j]:
            merged.append(nums1[i])
            i += 1
        else:
            merged.append(nums2[j])
            j += 1
    while i < m:
        merged.append(nums1[i])
        i += 1
    while j < n:
        merged.append(nums2[j])
        j += 1
    for index, number in enumerate(merged):
        nums1[index] = number
        print(nums1[index],number)

nums1 = [1,2,3,0,0,0] 
nums2 = [2,5,6]
m = 3
n = 3

function(nums1,nums2,n,m)


============

#Sort

SOrt

my_list = [4, 5, 1, 2, 4]
sorted_list = sorted(my_list)
print(sorted_list)
